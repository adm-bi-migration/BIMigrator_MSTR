# Configuration for mapping MicroStrategy elements to Power BI objects

# --- Output Settings ---
Output:
  intermediate_dir: extracted
  validate_intermediate: false

# --- API Settings ---
api_settings:
  base_url: "http://localhost:8000/api"
  version: "v2"
  timeout_seconds: 30
  endpoints:
    project: "/projects/{projectId}"
    schema: "/projects/{projectId}/schema"
    reports: "/projects/{projectId}/reports"
    documents: "/projects/{projectId}/documents"
    dossiers: "/projects/{projectId}/dossiers"
    metrics: "/projects/{projectId}/metrics"
    filters: "/projects/{projectId}/filters"
    prompts: "/projects/{projectId}/prompts"
    cubes: "/projects/{projectId}/cubes"

# --- Template Mappings ---
Templates:
  base_dir: templates
  mappings:
    # --- Project Files ---
    version:
      template: Version.txt
      output: Version.txt
      config: PowerBiVersion
      dataclass: PowerBiVersion

    pbixproj:
      template: pbixproj.json
      output: .pbixproj.json
      config: PowerBiProject
      dataclass: PowerBiProject

    # --- Model Files ---
    model:
      template: model.tmdl
      output: Model/model.tmdl
      config: PowerBiModel
      dataclass: PowerBiModel

    database:
      template: database.tmdl
      output: Model/database.tmdl
      config: PowerBiDatabase
      dataclass: PowerBiDatabase

    expressions:
      template: expressions.tmdl
      output: Model/expressions.tmdl
      config: PowerBiExpressions
      dataclass: PowerBiExpressions

    relationships:
      template: relationships.tmdl
      output: Model/relationships.tmdl
      config: PowerBiRelationships
      dataclass: PowerBiRelationships

    table:
      template: Table.tmdl
      output: Model/tables/{{source_name}}.tmdl
      config: PowerBiTable
      dataclass: PowerBiTable
      multiple: true
      name_from: source_name

    culture:
      template: culture.tmdl
      output: Model/cultures/{{culture}}.tmdl
      config: PowerBiCulture
      dataclass: CultureInfo
      multiple: true
      name_from: culture

    # --- Report Files ---
    report_config:
      template: report.config.json
      output: Report/config.json
      config: PowerBiReportConfig
      dataclass: PowerBiReportConfig

    report_metadata:
      template: report.metadata.json
      output: Report/metadata.json
      config: PowerBiReportMetadata
      dataclass: PowerBiReportMetadata

    report_settings:
      template: report.settings.json
      output: Report/settings.json
      config: PowerBiReportSettings
      dataclass: PowerBiReportSettings

    diagram_layout:
      template: diagram.layout.json
      output: Report/layout.json
      config: PowerBiDiagramLayout
      dataclass: PowerBiDiagramLayout

    report:
      template: report.json
      output: Report/report.json
      config: PowerBiReport
      dataclass: PowerBiReport

    report_section:
      template: report.section.json
      output: Report/sections/{{name}}.json
      config: PowerBiReportSection
      dataclass: PowerBiReportSection
      multiple: true
      name_from: name

# --- Core Mappings ---
Mappings:
  # --- Project Configuration ---
  Project:
    source_xpath: "//project"
    attributes:
      name:
        source_attribute: "name"
      description:
        source_attribute: "description"
        optional: true
      version:
        source_xpath: "version/@number"

  # --- Schema Objects ---
  SchemaObjects:
    # Attribute Forms
    AttributeForms:
      source_xpath: "//attribute/forms/form"
      attributes:
        name:
          source_attribute: "name"
        category:
          source_attribute: "category"
          mapping:
            ID: "Key"
            DESC: "Name"
            LONGDESC: "Description"

    # Data Types
    DataTypes:
      mapping:
        Integer: "Int64"
        Double: "Double"
        String: "String"
        Date: "DateTime"
        Boolean: "Boolean"

  # --- Object Types ---
  ObjectTypes:
    # Reports
    Report:
      source_xpath: "//report[@type='grid' or @type='graph']"
      target: "PowerBIPage"
      attributes:
        name:
          source_attribute: "name"
        type:
          source_attribute: "type"
          mapping:
            grid: "Table"
            graph: "Visual"

    # Documents
    Document:
      source_xpath: "//document"
      target:
        type: "PowerBIReport"
        conditions:
          use_paginated:
            - "has_pixel_perfect_requirements"
            - "has_multiple_data_regions"

    # Metrics
    Metric:
      source_xpath: "//metric"
      target: "PowerBIMeasure"
      attributes:
        name:
          source_attribute: "name"
        expression:
          source_xpath: "expression/text()"

  # Function Mappings
  Functions:
    Aggregation:
      Sum:
        target: "SUM"
        confidence: "High"
      Avg:
        target: "AVERAGE"
        confidence: "High"
      Count:
        target: "COUNT"
        confidence: "High"
      CountDistinct:
        target: "DISTINCTCOUNT"
        confidence: "High"
      Max:
        target: "MAX"
        confidence: "High"
      Min:
        target: "MIN"
        confidence: "High"
    TimeIntelligence:
      YearToDate:
        target: "TOTALYTD"
        confidence: "Medium"
        requires: ["measure", "date_column"]
      MonthToDate:
        target: "TOTALMTD"
        confidence: "Medium"
        requires: ["measure", "date_column"]
      QuarterToDate:
        target: "TOTALQTD"
        confidence: "Medium"
        requires: ["measure", "date_column"]
    LevelMetrics:
      ReportLevel:
        pattern: "Sum({~+})"
        target: "CALCULATE(SUM(), ALLSELECTED())"
        confidence: "Medium"
      AttributeLevel:
        pattern: "Sum({attribute+})"
        target: "CALCULATE(SUM(), ALLEXCEPT(table, attribute))"
        confidence: "Medium"
    Complex:
      RunningSum:
        target: "CALCULATE(SUM(), FILTER(ALLSELECTED(), column <= MAX(column)))"
        confidence: "Medium"
        requires: ["measure", "order_by_column"]
      RankDecreasing:
        target: "RANKX(ALL(table), measure, , DESC)"
        confidence: "Medium"
        requires: ["measure", "table"]
      ApplySimple:
        target: "MANUAL_REVIEW"
        confidence: "Low"
        notes: "Contains raw SQL, needs manual review"
      ApplyAgg:
        target: "MANUAL_REVIEW"
        confidence: "Low"
        notes: "Complex aggregation, needs manual review"

  # Prompt Type Mappings
  Prompts:
    Element:
      target: "Slicer"
      properties:
        type: "Dropdown"
        multi_select: true
    Value:
      target: "Parameter"
      properties:
        allow_multiple: false
    Object:
      target: "Parameter"
      properties:
        data_type: "Text"

  # API Response Field Mappings
  ResponseFields:
    Metric:
      name: "name"
      expression: "expression.text"
      description: "description"
      folder: "ancestors[*].name"
    Attribute:
      name: "name"
      forms: "forms[*]"
      lookup_table: "lookupTable.name"
    Report:
      name: "name"
      grid: "grid"
      filters: "filters[*]"
      prompts: "prompts[*]"



  # Object Type Mappings
  ObjectTypes:
    - source: "MicroStrategyReport"
      target: "PowerBIPage"
      notes: "Grid/graph reports typically map to a single Power BI page"
      conversion_priority: 1

    - source: "MicroStrategyDocument"
      target: ["PowerBIReport", "PowerBIPaginatedReport"]
      notes: "Complex layouts may need Paginated Reports"
      conversion_priority: 3
      paginated_report_conditions:
        - "has_pixel_perfect_requirements"
        - "has_multiple_data_regions"
        - "has_complex_formatting"

    - source: "MicroStrategyDossier"
      target: "PowerBIReport"
      notes: "Modern dashboards map well to Power BI reports"
      conversion_priority: 1

    - source: "MicroStrategyMetric"
      target: "PowerBIMeasure"
      notes: "Requires DAX conversion"
      conversion_priority: 2

    - source: "MicroStrategyAttribute"
      target: "PowerBIColumn"
      notes: "Maps to dimension columns"
      conversion_priority: 1
      table_placement: "dimension"

    - source: "MicroStrategyFact"
      target: "PowerBIColumn"
      notes: "Maps to fact table columns"
      conversion_priority: 1
      table_placement: "fact"

    - source: "MicroStrategyPrompt"
      target: ["PowerBISlicer", "PowerBIParameter"]
      notes: "Element prompts -> Slicers, Value prompts -> Parameters"
      conversion_priority: 2
      mapping_rules:
        element_prompt: "PowerBISlicer"
        value_prompt: "PowerBIParameter"
        object_prompt: "PowerBIParameter"

    - source: "MicroStrategyIntelligentCube"
      target: "PowerBIDataset_ImportMode"
      notes: "Maps to imported tables in Power BI"
      conversion_priority: 1

  # Function Mappings for Formula Conversion
  FunctionMappings:
    # Aggregation Functions
    - source_function: "Sum"
      target_function: "SUM"
      confidence: "High"
      context_required: ["column_name"]

    - source_function: "Avg"
      target_function: "AVERAGE"
      confidence: "High"
      context_required: ["column_name"]

    - source_function: "Count"
      target_function: "COUNT"
      confidence: "High"
      context_required: ["column_name"]

    - source_function: "CountDistinct"
      target_function: "DISTINCTCOUNT"
      confidence: "High"
      context_required: ["column_name"]

    - source_function: "Max"
      target_function: "MAX"
      confidence: "High"
      context_required: ["column_name"]

    - source_function: "Min"
      target_function: "MIN"
      confidence: "High"
      context_required: ["column_name"]

    # Time Intelligence Functions
    - source_function: "YearToDate"
      target_function: "TOTALYTD"
      confidence: "Medium"
      context_required: ["measure", "date_column"]

    - source_function: "MonthToDate"
      target_function: "TOTALMTD"
      confidence: "Medium"
      context_required: ["measure", "date_column"]

    - source_function: "QuarterToDate"
      target_function: "TOTALQTD"
      confidence: "Medium"
      context_required: ["measure", "date_column"]

    # Level Metrics
    - source_function: "LevelMetric"
      pattern: "Sum({~+})"
      target_function: "CALCULATE(SUM(), ALLSELECTED())"
      confidence: "Medium"
      notes: "Report level total"

    - source_function: "LevelMetric"
      pattern: "Sum({attribute+})"
      target_function: "CALCULATE(SUM(), ALLEXCEPT(table, attribute))"
      confidence: "Medium"
      notes: "Attribute level total"

    # Complex Functions
    - source_function: "RunningSum"
      target_function: "CALCULATE(SUM(), FILTER(ALLSELECTED(), column <= MAX(column)))"
      confidence: "Medium"
      context_required: ["measure", "order_by_column"]

    - source_function: "RankDecreasing"
      target_function: "RANKX(ALL(table), measure, , DESC)"
      confidence: "Medium"
      context_required: ["measure", "table"]

    - source_function: "ApplySimple"
      target_function: "MANUAL_REVIEW"
      confidence: "Low"
      notes: "Contains raw SQL, needs manual conversion"
      requires_review: true

    - source_function: "ApplyAgg"
      target_function: "MANUAL_REVIEW"
      confidence: "Low"
      notes: "Complex aggregation, needs manual review"
      requires_review: true

  # Schema Object Mappings
  SchemaObjects:
    AttributeForms:
      ID: "Key"
      DESC: "Name"
      LONGDESC: "Description"

    DataTypes:
      Integer: "Int64"
      Double: "Double"
      String: "String"
      Date: "DateTime"
      Boolean: "Boolean"

  # Prompt Mappings
  PromptMappings:
    ElementPrompt:
      target: "Slicer"
      properties:
        type: "Dropdown"
        multi_select: true

    ValuePrompt:
      target: "Parameter"
      properties:
        allow_multiple: false

    ObjectPrompt:
      target: "Parameter"
      properties:
        data_type: "Text"

  # API Response Mappings
  ResponseMappings:
    MetricDefinition:
      source_api_path: "/metrics/{metricId}/definition"
      field_mappings:
        name:
          source_json_path: "name"
        expression:
          source_json_path: "expression.text"
        description:
          source_json_path: "description"
          default: ""
        folder_path:
          source_json_path: "ancestors[*].name"

    AttributeDefinition:
      source_api_path: "/attributes/{attributeId}/definition"
      field_mappings:
        name:
          source_json_path: "name"
        forms:
          source_json_path: "forms[*]"
        lookup_table:
          source_json_path: "lookupTable.name"

    ReportDefinition:
      source_api_path: "/reports/{reportId}/definition"
      field_mappings:
        name:
          source_json_path: "name"
        grid_data:
          source_json_path: "grid"
        filters:
          source_json_path: "filters[*]"
        prompts:
          source_json_path: "prompts[*]"
